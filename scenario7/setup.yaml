apiVersion: v1
kind: Namespace
metadata:
  name: red
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: Namespace
metadata:
  name: green
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: Namespace
metadata:
  name: blue
  labels:
    istio-injection: enabled
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: gateway-green
  namespace: green
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "works.istiodemo.io"
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: gateway-red
  namespace: red
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "broken.istiodemo.io"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: red-vs
  namespace: red
spec:
  hosts:
  - "*"
  gateways:
  - gateway-red
  http:
  - route:
    - destination:
        host: bff-svc
        port:
          number: 8000
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: green-vs
  namespace: green
spec:
  hosts:
  - "*"
  gateways:
  - gateway-green
  http:
  - route:
    - destination:
        host: bff-svc
        port:
          number: 8000
---
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default
  namespace: istio-system
spec:
  mtls:
    mode: STRICT
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: only-green-please
  namespace: blue
spec:
  selector:
    matchLabels:
      app: backend
  action: ALLOW
  rules:
  - from:
    - source:
       namespaces: ["green"]
    to:
    - operation:
        paths: ["/secure"]
--- 
apiVersion: v1
kind: Service
metadata:
  name: bff-svc
  namespace: green
  labels:
    app: bff
spec:
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: 8080
  selector:
    app: bff
---
apiVersion: v1
kind: Service
metadata:
  name: bff-svc
  namespace: red
  labels:
    app: bff
spec:
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: 8080
  selector:
    app: bff
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bff
  namespace: green
  labels:
    app: bff 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bff
  template:
    metadata:
      labels:
        app: bff
    spec:
      serviceAccountName: backend
      containers:
      - env:
        - name: "UPSTREAM_URIS"
          value: "http://backend-svc.blue.svc.cluster.local:8000/secure"    
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "SERVER_TYPE"
          value: "http"                      
        - name: "NAME"
          value: "bff"      
        - name: "MESSAGE"
          value: "hello from green bff"              
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: nicholasjackson/fake-service:v0.17.0
        name: bff
        ports:
        - containerPort: 8080
          name: http-port
          protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bff
  namespace: red
  labels:
    app: bff 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bff
  template:
    metadata:
      labels:
        app: bff
    spec:
      serviceAccountName: backend
      containers:
      - env:
        - name: "UPSTREAM_URIS"
          value: "http://backend-svc.blue.svc.cluster.local:8000/secure"    
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "SERVER_TYPE"
          value: "http"                      
        - name: "NAME"
          value: "bff"      
        - name: "MESSAGE"
          value: "hello from red bff"              
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: nicholasjackson/fake-service:v0.17.0
        name: bff
        ports:
        - containerPort: 8080
          name: http-port
          protocol: TCP
--- 
apiVersion: v1
kind: Service
metadata:
  name: backend-svc
  namespace: blue
  labels:
    app: backend
spec:
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: 8080
  selector:
    app: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: blue
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      serviceAccountName: backend
      containers:
      - env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "SERVER_TYPE"
          value: "http"                      
        - name: "NAME"
          value: "backend"      
        - name: "MESSAGE"
          value: "hello from backend"    
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: nicholasjackson/fake-service:v0.17.0
        name: backend
        ports:
        - containerPort: 8080
          name: http-port
          protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend
  namespace: red
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend
  namespace: green
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend
  namespace: blue
