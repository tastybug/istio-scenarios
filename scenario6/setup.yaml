apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: shared-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: shared-vs
spec:
  hosts:
  - "*"
  gateways:
  - shared-gateway
  http:
  - route:
    - destination:
        host: backend-svc
        port:
          number: 8000
--- 
apiVersion: v1
kind: Service
metadata:
  name: backend-svc
  labels:
    app: backend
spec:
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: 8080
  selector:
    app: backend
---  
apiVersion: security.istio.io/v1
kind: RequestAuthentication
metadata:
  name: jwt-auth
  # by putting it in ns:istio-system, it becomes global
  namespace: default
spec:
  selector:
    matchLabels:
      app: backend
  jwtRules:
  - issuer: "testing@secure.istio.io"
    jwksUri: "https://raw.githubusercontent.com/istio/istio/release-1.20/security/tools/jwt/samples/jwks.json"
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: require-jwt
spec:
  selector:
    matchLabels:
      app: backend
  action: ALLOW
  rules:
  - to:
    - operation:
        methods: ["POST"]
        paths: ["/open"]
  - from:
    - source:
       requestPrincipals: ["testing@secure.istio.io/testing@secure.istio.io"]
    to:
    - operation:
        paths: ["/secure"]
    when:
    - key: request.auth.claims[groups]
      values: ["group1"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      serviceAccountName: backend
      containers:
      - env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "SERVER_TYPE"
          value: "http"                      
        - name: "NAME"
          value: "backend"      
        - name: "MESSAGE"
          value: "hello from backend"              
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: nicholasjackson/fake-service:v0.17.0
        name: backend
        ports:
        - containerPort: 8080
          name: http-port
          protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend